name: Build and Push Dify Images to GHCR

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # 允许手动触发

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # 新增步骤：下载缺失的 Dockerfile 文件
    - name: Download missing Dockerfiles
      run: |
        echo "下载缺失的 Dockerfile 文件..."
        
        # 创建 docker 目录（如果不存在）
        mkdir -p docker
        
        # 下载 Dockerfile.api
        if [ ! -f "docker/Dockerfile.api" ]; then
          echo "下载 Dockerfile.api..."
          curl -o docker/Dockerfile.api https://raw.githubusercontent.com/langgenius/dify/main/Dockerfile.api
        else
          echo "Dockerfile.api 已存在"
        fi
        
        # 下载 Dockerfile.web
        if [ ! -f "docker/Dockerfile.web" ]; then
          echo "下载 Dockerfile.web..."
          curl -o docker/Dockerfile.web https://raw.githubusercontent.com/langgenius/dify/main/Dockerfile.web
        else
          echo "Dockerfile.web 已存在"
        fi
        
        # 下载 Dockerfile.worker
        if [ ! -f "docker/Dockerfile.worker" ]; then
          echo "下载 Dockerfile.worker..."
          curl -o docker/Dockerfile.worker https://raw.githubusercontent.com/langgenius/dify/main/Dockerfile.worker
        else
          echo "Dockerfile.worker 已存在"
        fi
        
        # 验证下载的文件
        echo "验证下载的文件:"
        ls -la docker/
        echo "Dockerfile.api 前几行:"
        head -n 5 docker/Dockerfile.api || echo "无法读取 Dockerfile.api"

    # 添加调试步骤 - 检查仓库结构
    - name: Debug - Check repository structure
      run: |
        echo "当前工作目录:"
        pwd
        echo "列出所有文件和文件夹:"
        ls -la
        echo "检查 docker 文件夹是否存在:"
        if [ -d "docker" ]; then
          echo "docker 文件夹存在"
          echo "docker 文件夹内容:"
          ls -la docker/
          echo "检查 Dockerfile.api 是否存在:"
          if [ -f "docker/Dockerfile.api" ]; then
            echo "Dockerfile.api 存在"
            echo "文件内容前几行:"
            head -n 5 docker/Dockerfile.api
          else
            echo "错误: Dockerfile.api 不存在于 docker/ 文件夹中"
          fi
        else
          echo "错误: docker 文件夹不存在"
        fi

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GHCR_TOKEN }}

    - name: Build and push API image
      working-directory: ./
      run: |
        docker build -t ghcr.io/${{ github.repository_owner }}/dify-api:latest -f docker/Dockerfile.api .
        docker push ghcr.io/${{ github.repository_owner }}/dify-api:latest

    - name: Build and push Web image
      run: |
        docker build -t ghcr.io/${{ github.repository_owner }}/dify-web:latest -f docker/Dockerfile.web .
        docker push ghcr.io/${{ github.repository_owner }}/dify-web:latest

    - name: Build and push Worker image
      run: |
        docker build -t ghcr.io/${{ github.repository_owner }}/dify-worker:latest -f docker/Dockerfile.worker .
        docker push ghcr.io/${{ github.repository_owner }}/dify-worker:latest

    - name: Pull and push base images
      run: |
        # 拉取基础镜像并推送到 GHCR
        docker pull nginx:alpine
        docker tag nginx:alpine ghcr.io/${{ github.repository_owner }}/nginx:alpine
        docker push ghcr.io/${{ github.repository_owner }}/nginx:alpine

        docker pull postgres:13
        docker tag postgres:13 ghcr.io/${{ github.repository_owner }}/postgres:13
        docker push ghcr.io/${{ github.repository_owner }}/postgres:13

        docker pull redis:6-alpine
        docker tag redis:6-alpine ghcr.io/${{ github.repository_owner }}/redis:6-alpine
        docker push ghcr.io/${{ github.repository_owner }}/redis:6-alpine
